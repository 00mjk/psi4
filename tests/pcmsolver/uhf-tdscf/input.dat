#! UHF PCM TDSCF 
# comparison against other implementations:
#CPCM solvation model excitation energies of NH2 radical [eV]:
#(Same radii, epsilon, refraction index, probe radius in each program)
#
#state	PSI4	ORCA	G09
#1	2.43618	2.457	2.4411
#2	7.39834	7.203	7.3993
#3	9.11054	8.991	9.1777
#4	10.1063	9.848	10.1017
#5	10.2178	10.365	10.3305

exc_energies_uhf = [
0.08972598844884663,
0.2719972189552112,
0.33525624703045037,
0.3713900898382711,
0.3762084431466903,
]

osc_strengths_uhf = [
0.00414272407997719,
4.590977316768732e-28, 
0.005715258102198367, 
0.018432750255865125, 
0.006434117688452513,
]

scf_ref = -55.5218518303635165

r_calc = []
e_calc = []

set = {
    reference uhf
    scf_type   pk
    basis      def2-SVP
    e_convergence 8
    pcm true
    maxiter 50
    tdscf_states 5
}

pcm = {
   Units=Angstrom
   Medium {
   SolverType = IEFPCM
   Solvent = Water
   Nonequilibrium = True
   }

   Cavity {
   radiiset= uff
   Type = GePol
   Area = 0.3
   Mode = Implicit
   }
}


molecule NH2 {
0, 2
N  0.000000000000     0.000000000000    -0.079859033927
H  0.000000000000    -0.803611003426     0.554794694632
H  0.000000000000     0.803611003426     0.554794694632
symmetry c1
no_reorient
}
scf_energy = energy("TD-SCF")
compare_values(scf_ref, scf_energy, 6, "PCM-UHF Energy") #TEST
for i in range(5):
    e_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} EXCITATION ENERGY - A SYMMETRY'))
    r_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} OSCILLATOR STRENGTH (LEN) - A SYMMETRY'))
compare_arrays(exc_energies_uhf, e_calc, 5, f'UHF PCM EXCITATION ENERGY {i}') #TEST
compare_arrays(osc_strengths_uhf, r_calc, 5, f'UHF PCM OSCILLATOR STRENGTH {i}') #TEST
